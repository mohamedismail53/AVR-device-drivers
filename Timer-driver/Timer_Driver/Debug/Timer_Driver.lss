
Timer_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000033c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000003b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800060  00800060  000003b0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  0000041c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fc2  00000000  00000000  000005ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000809  00000000  00000000  0000156e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b7a  00000000  00000000  00001d77  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000528  00000000  00000000  000028f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b87  00000000  00000000  00002e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009e1  00000000  00000000  000039a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00004384  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 70 01 	jmp	0x2e0	; 0x2e0 <__vector_4>
  14:	0c 94 47 01 	jmp	0x28e	; 0x28e <__vector_5>
  18:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__vector_6>
  1c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__vector_7>
  20:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__vector_8>
  24:	0c 94 a3 00 	jmp	0x146	; 0x146 <__vector_9>
  28:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__vector_10>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	aa 36       	cpi	r26, 0x6A	; 106
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 9c 01 	jmp	0x338	; 0x338 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:


// watchdog test
int main(void)
{
	WDT_ON();
  7c:	0e 94 99 01 	call	0x332	; 0x332 <WDT_ON>
	DDRD_REG=0xFF;
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	81 bb       	out	0x11, r24	; 17
	PORTD_REG=0x00;
  84:	12 ba       	out	0x12, r1	; 18
	
	while(1)
	{
		PORTD_REG^=(1<<7);
  86:	82 b3       	in	r24, 0x12	; 18
  88:	80 58       	subi	r24, 0x80	; 128
  8a:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8c:	2f e7       	ldi	r18, 0x7F	; 127
  8e:	82 e1       	ldi	r24, 0x12	; 18
  90:	91 e3       	ldi	r25, 0x31	; 49
  92:	21 50       	subi	r18, 0x01	; 1
  94:	80 40       	sbci	r24, 0x00	; 0
  96:	90 40       	sbci	r25, 0x00	; 0
  98:	e1 f7       	brne	.-8      	; 0x92 <main+0x16>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <main+0x20>
  9c:	00 00       	nop
		_delay_ms(2010);
		__asm__("WDR");	
  9e:	a8 95       	wdr
  a0:	f2 cf       	rjmp	.-28     	; 0x86 <main+0xa>

000000a2 <__vector_11>:
	Timer2_callBackPtr = LocalFptr;
}

void SetCallBack_Timer2_OVF(void(*LocalFptr)(void))
{
	Timer2_callBackPtr = LocalFptr;
  a2:	1f 92       	push	r1
  a4:	0f 92       	push	r0
  a6:	0f b6       	in	r0, 0x3f	; 63
  a8:	0f 92       	push	r0
  aa:	11 24       	eor	r1, r1
  ac:	2f 93       	push	r18
  ae:	3f 93       	push	r19
  b0:	4f 93       	push	r20
  b2:	5f 93       	push	r21
  b4:	6f 93       	push	r22
  b6:	7f 93       	push	r23
  b8:	8f 93       	push	r24
  ba:	9f 93       	push	r25
  bc:	af 93       	push	r26
  be:	bf 93       	push	r27
  c0:	ef 93       	push	r30
  c2:	ff 93       	push	r31
  c4:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <Timer0_callBackPtr>
  c8:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <Timer0_callBackPtr+0x1>
  cc:	30 97       	sbiw	r30, 0x00	; 0
  ce:	09 f0       	breq	.+2      	; 0xd2 <__vector_11+0x30>
  d0:	09 95       	icall
  d2:	ff 91       	pop	r31
  d4:	ef 91       	pop	r30
  d6:	bf 91       	pop	r27
  d8:	af 91       	pop	r26
  da:	9f 91       	pop	r25
  dc:	8f 91       	pop	r24
  de:	7f 91       	pop	r23
  e0:	6f 91       	pop	r22
  e2:	5f 91       	pop	r21
  e4:	4f 91       	pop	r20
  e6:	3f 91       	pop	r19
  e8:	2f 91       	pop	r18
  ea:	0f 90       	pop	r0
  ec:	0f be       	out	0x3f, r0	; 63
  ee:	0f 90       	pop	r0
  f0:	1f 90       	pop	r1
  f2:	18 95       	reti

000000f4 <__vector_10>:
  f4:	1f 92       	push	r1
  f6:	0f 92       	push	r0
  f8:	0f b6       	in	r0, 0x3f	; 63
  fa:	0f 92       	push	r0
  fc:	11 24       	eor	r1, r1
  fe:	2f 93       	push	r18
 100:	3f 93       	push	r19
 102:	4f 93       	push	r20
 104:	5f 93       	push	r21
 106:	6f 93       	push	r22
 108:	7f 93       	push	r23
 10a:	8f 93       	push	r24
 10c:	9f 93       	push	r25
 10e:	af 93       	push	r26
 110:	bf 93       	push	r27
 112:	ef 93       	push	r30
 114:	ff 93       	push	r31
 116:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <Timer0_callBackPtr>
 11a:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <Timer0_callBackPtr+0x1>
 11e:	30 97       	sbiw	r30, 0x00	; 0
 120:	09 f0       	breq	.+2      	; 0x124 <__vector_10+0x30>
 122:	09 95       	icall
 124:	ff 91       	pop	r31
 126:	ef 91       	pop	r30
 128:	bf 91       	pop	r27
 12a:	af 91       	pop	r26
 12c:	9f 91       	pop	r25
 12e:	8f 91       	pop	r24
 130:	7f 91       	pop	r23
 132:	6f 91       	pop	r22
 134:	5f 91       	pop	r21
 136:	4f 91       	pop	r20
 138:	3f 91       	pop	r19
 13a:	2f 91       	pop	r18
 13c:	0f 90       	pop	r0
 13e:	0f be       	out	0x3f, r0	; 63
 140:	0f 90       	pop	r0
 142:	1f 90       	pop	r1
 144:	18 95       	reti

00000146 <__vector_9>:
 146:	1f 92       	push	r1
 148:	0f 92       	push	r0
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	0f 92       	push	r0
 14e:	11 24       	eor	r1, r1
 150:	2f 93       	push	r18
 152:	3f 93       	push	r19
 154:	4f 93       	push	r20
 156:	5f 93       	push	r21
 158:	6f 93       	push	r22
 15a:	7f 93       	push	r23
 15c:	8f 93       	push	r24
 15e:	9f 93       	push	r25
 160:	af 93       	push	r26
 162:	bf 93       	push	r27
 164:	ef 93       	push	r30
 166:	ff 93       	push	r31
 168:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <Timer1_OVF_callBackPtr>
 16c:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <Timer1_OVF_callBackPtr+0x1>
 170:	30 97       	sbiw	r30, 0x00	; 0
 172:	09 f0       	breq	.+2      	; 0x176 <__vector_9+0x30>
 174:	09 95       	icall
 176:	ff 91       	pop	r31
 178:	ef 91       	pop	r30
 17a:	bf 91       	pop	r27
 17c:	af 91       	pop	r26
 17e:	9f 91       	pop	r25
 180:	8f 91       	pop	r24
 182:	7f 91       	pop	r23
 184:	6f 91       	pop	r22
 186:	5f 91       	pop	r21
 188:	4f 91       	pop	r20
 18a:	3f 91       	pop	r19
 18c:	2f 91       	pop	r18
 18e:	0f 90       	pop	r0
 190:	0f be       	out	0x3f, r0	; 63
 192:	0f 90       	pop	r0
 194:	1f 90       	pop	r1
 196:	18 95       	reti

00000198 <__vector_7>:
 198:	1f 92       	push	r1
 19a:	0f 92       	push	r0
 19c:	0f b6       	in	r0, 0x3f	; 63
 19e:	0f 92       	push	r0
 1a0:	11 24       	eor	r1, r1
 1a2:	2f 93       	push	r18
 1a4:	3f 93       	push	r19
 1a6:	4f 93       	push	r20
 1a8:	5f 93       	push	r21
 1aa:	6f 93       	push	r22
 1ac:	7f 93       	push	r23
 1ae:	8f 93       	push	r24
 1b0:	9f 93       	push	r25
 1b2:	af 93       	push	r26
 1b4:	bf 93       	push	r27
 1b6:	ef 93       	push	r30
 1b8:	ff 93       	push	r31
 1ba:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <Timer1_OCA_callBackPtr>
 1be:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <Timer1_OCA_callBackPtr+0x1>
 1c2:	30 97       	sbiw	r30, 0x00	; 0
 1c4:	09 f0       	breq	.+2      	; 0x1c8 <__vector_7+0x30>
 1c6:	09 95       	icall
 1c8:	ff 91       	pop	r31
 1ca:	ef 91       	pop	r30
 1cc:	bf 91       	pop	r27
 1ce:	af 91       	pop	r26
 1d0:	9f 91       	pop	r25
 1d2:	8f 91       	pop	r24
 1d4:	7f 91       	pop	r23
 1d6:	6f 91       	pop	r22
 1d8:	5f 91       	pop	r21
 1da:	4f 91       	pop	r20
 1dc:	3f 91       	pop	r19
 1de:	2f 91       	pop	r18
 1e0:	0f 90       	pop	r0
 1e2:	0f be       	out	0x3f, r0	; 63
 1e4:	0f 90       	pop	r0
 1e6:	1f 90       	pop	r1
 1e8:	18 95       	reti

000001ea <__vector_8>:
 1ea:	1f 92       	push	r1
 1ec:	0f 92       	push	r0
 1ee:	0f b6       	in	r0, 0x3f	; 63
 1f0:	0f 92       	push	r0
 1f2:	11 24       	eor	r1, r1
 1f4:	2f 93       	push	r18
 1f6:	3f 93       	push	r19
 1f8:	4f 93       	push	r20
 1fa:	5f 93       	push	r21
 1fc:	6f 93       	push	r22
 1fe:	7f 93       	push	r23
 200:	8f 93       	push	r24
 202:	9f 93       	push	r25
 204:	af 93       	push	r26
 206:	bf 93       	push	r27
 208:	ef 93       	push	r30
 20a:	ff 93       	push	r31
 20c:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <Timer1_OCA_callBackPtr>
 210:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <Timer1_OCA_callBackPtr+0x1>
 214:	30 97       	sbiw	r30, 0x00	; 0
 216:	09 f0       	breq	.+2      	; 0x21a <__vector_8+0x30>
 218:	09 95       	icall
 21a:	ff 91       	pop	r31
 21c:	ef 91       	pop	r30
 21e:	bf 91       	pop	r27
 220:	af 91       	pop	r26
 222:	9f 91       	pop	r25
 224:	8f 91       	pop	r24
 226:	7f 91       	pop	r23
 228:	6f 91       	pop	r22
 22a:	5f 91       	pop	r21
 22c:	4f 91       	pop	r20
 22e:	3f 91       	pop	r19
 230:	2f 91       	pop	r18
 232:	0f 90       	pop	r0
 234:	0f be       	out	0x3f, r0	; 63
 236:	0f 90       	pop	r0
 238:	1f 90       	pop	r1
 23a:	18 95       	reti

0000023c <__vector_6>:
 23c:	1f 92       	push	r1
 23e:	0f 92       	push	r0
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	0f 92       	push	r0
 244:	11 24       	eor	r1, r1
 246:	2f 93       	push	r18
 248:	3f 93       	push	r19
 24a:	4f 93       	push	r20
 24c:	5f 93       	push	r21
 24e:	6f 93       	push	r22
 250:	7f 93       	push	r23
 252:	8f 93       	push	r24
 254:	9f 93       	push	r25
 256:	af 93       	push	r26
 258:	bf 93       	push	r27
 25a:	ef 93       	push	r30
 25c:	ff 93       	push	r31
 25e:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <Timer1_ICU_callBackPtr>
 262:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <Timer1_ICU_callBackPtr+0x1>
 266:	30 97       	sbiw	r30, 0x00	; 0
 268:	09 f0       	breq	.+2      	; 0x26c <__vector_6+0x30>
 26a:	09 95       	icall
 26c:	ff 91       	pop	r31
 26e:	ef 91       	pop	r30
 270:	bf 91       	pop	r27
 272:	af 91       	pop	r26
 274:	9f 91       	pop	r25
 276:	8f 91       	pop	r24
 278:	7f 91       	pop	r23
 27a:	6f 91       	pop	r22
 27c:	5f 91       	pop	r21
 27e:	4f 91       	pop	r20
 280:	3f 91       	pop	r19
 282:	2f 91       	pop	r18
 284:	0f 90       	pop	r0
 286:	0f be       	out	0x3f, r0	; 63
 288:	0f 90       	pop	r0
 28a:	1f 90       	pop	r1
 28c:	18 95       	reti

0000028e <__vector_5>:
}

/************************* Timer 2 ISR functions ************************/
ISR(TIMER2_OVF_vect)
{
 28e:	1f 92       	push	r1
 290:	0f 92       	push	r0
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	0f 92       	push	r0
 296:	11 24       	eor	r1, r1
 298:	2f 93       	push	r18
 29a:	3f 93       	push	r19
 29c:	4f 93       	push	r20
 29e:	5f 93       	push	r21
 2a0:	6f 93       	push	r22
 2a2:	7f 93       	push	r23
 2a4:	8f 93       	push	r24
 2a6:	9f 93       	push	r25
 2a8:	af 93       	push	r26
 2aa:	bf 93       	push	r27
 2ac:	ef 93       	push	r30
 2ae:	ff 93       	push	r31
	if(Timer2_callBackPtr != NULLPTR)
 2b0:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <_edata>
 2b4:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <_edata+0x1>
 2b8:	30 97       	sbiw	r30, 0x00	; 0
 2ba:	09 f0       	breq	.+2      	; 0x2be <__vector_5+0x30>
	{
		Timer2_callBackPtr();
 2bc:	09 95       	icall
	}
}
 2be:	ff 91       	pop	r31
 2c0:	ef 91       	pop	r30
 2c2:	bf 91       	pop	r27
 2c4:	af 91       	pop	r26
 2c6:	9f 91       	pop	r25
 2c8:	8f 91       	pop	r24
 2ca:	7f 91       	pop	r23
 2cc:	6f 91       	pop	r22
 2ce:	5f 91       	pop	r21
 2d0:	4f 91       	pop	r20
 2d2:	3f 91       	pop	r19
 2d4:	2f 91       	pop	r18
 2d6:	0f 90       	pop	r0
 2d8:	0f be       	out	0x3f, r0	; 63
 2da:	0f 90       	pop	r0
 2dc:	1f 90       	pop	r1
 2de:	18 95       	reti

000002e0 <__vector_4>:
ISR(TIMER2_COMP_vect)
{
 2e0:	1f 92       	push	r1
 2e2:	0f 92       	push	r0
 2e4:	0f b6       	in	r0, 0x3f	; 63
 2e6:	0f 92       	push	r0
 2e8:	11 24       	eor	r1, r1
 2ea:	2f 93       	push	r18
 2ec:	3f 93       	push	r19
 2ee:	4f 93       	push	r20
 2f0:	5f 93       	push	r21
 2f2:	6f 93       	push	r22
 2f4:	7f 93       	push	r23
 2f6:	8f 93       	push	r24
 2f8:	9f 93       	push	r25
 2fa:	af 93       	push	r26
 2fc:	bf 93       	push	r27
 2fe:	ef 93       	push	r30
 300:	ff 93       	push	r31
	if(Timer2_callBackPtr != NULLPTR)
 302:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <_edata>
 306:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <_edata+0x1>
 30a:	30 97       	sbiw	r30, 0x00	; 0
 30c:	09 f0       	breq	.+2      	; 0x310 <__vector_4+0x30>
	{
		Timer2_callBackPtr();
 30e:	09 95       	icall
	}
}
 310:	ff 91       	pop	r31
 312:	ef 91       	pop	r30
 314:	bf 91       	pop	r27
 316:	af 91       	pop	r26
 318:	9f 91       	pop	r25
 31a:	8f 91       	pop	r24
 31c:	7f 91       	pop	r23
 31e:	6f 91       	pop	r22
 320:	5f 91       	pop	r21
 322:	4f 91       	pop	r20
 324:	3f 91       	pop	r19
 326:	2f 91       	pop	r18
 328:	0f 90       	pop	r0
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	0f 90       	pop	r0
 32e:	1f 90       	pop	r1
 330:	18 95       	reti

00000332 <WDT_ON>:


void WDT_ON(void)
{
	/* 2.1s time out session*/
	WDTCR = (1<<WDE) | (1 << WDP2) | (1 << WDP1) | (1 << WDP2);
 332:	8e e0       	ldi	r24, 0x0E	; 14
 334:	81 bd       	out	0x21, r24	; 33
 336:	08 95       	ret

00000338 <_exit>:
 338:	f8 94       	cli

0000033a <__stop_program>:
 33a:	ff cf       	rjmp	.-2      	; 0x33a <__stop_program>
